<?php

namespace App\Http\Livewire\BudgetManagement;

use Illuminate\Support\Facades\Config;
use Illuminate\Support\Facades\DB;
use Livewire\Component;
use App\Models\BudgetManagement;
use Mediconesystems\LivewireDatatables\Column;
use Mediconesystems\LivewireDatatables\Http\Livewire\LivewireDatatable;

class BudgetItemTable extends LivewireDatatable
{

    public $exportable=true;



    public function builder()
    {
        return BudgetManagement::query();
        // TODO: Change the autogenerated stub
    }


    public function columns(){

        return [
            Column::name('id')->label('ID'),
            Column::name('budget_name')->label('Budget Name')->searchable()->sortable(),
            Column::name('revenue')->label('Revenue')->searchable()->editable(),
            Column::name('capital_expenditure')->label('Capital Expenditure')->searchable(),
            Column::name('status')->label('Status')->searchable(),
            Column::name('approval_status')->label('Approval Status')->searchable(),

            Column::callback(['id', 'status'], function ($id, $status){
                return view('livewire.budget-management.action-buttons', [
                    'id' => $id,
                    'status' => $status
                ]);
            })->label('Actions')->unsortable(),

        ];
    }

    /**
     * Edit budget item
     */
    public function edit($id)
    {
        $this->emit('editBudgetItem', $id);
    }

    /**
     * View budget item details
     */
    public function view($id)
    {
        $this->emit('viewBudgetItem', $id);
    }

    /**
     * Approve budget item
     */
    public function approve($id)
    {
        try {
            $budget = BudgetManagement::findOrFail($id);
            $budget->update([
                'approval_status' => 'APPROVED',
                'status' => 'ACTIVE'
            ]);
            
            session()->flash('message', 'Budget item approved successfully.');
            $this->emit('budgetUpdated');
        } catch (\Exception $e) {
            session()->flash('error', 'Failed to approve budget item: ' . $e->getMessage());
        }
    }

    /**
     * Reject budget item
     */
    public function reject($id)
    {
        try {
            $budget = BudgetManagement::findOrFail($id);
            $budget->update([
                'approval_status' => 'REJECTED',
                'status' => 'INACTIVE'
            ]);
            
            session()->flash('message', 'Budget item rejected successfully.');
            $this->emit('budgetUpdated');
        } catch (\Exception $e) {
            session()->flash('error', 'Failed to reject budget item: ' . $e->getMessage());
        }
    }

    /**
     * Delete budget item
     */
    public function delete($id)
    {
        try {
            $budget = BudgetManagement::findOrFail($id);
            $budget->delete();
            
            session()->flash('message', 'Budget item deleted successfully.');
            $this->emit('budgetUpdated');
        } catch (\Exception $e) {
            session()->flash('error', 'Failed to delete budget item: ' . $e->getMessage());
        }
    }

}
